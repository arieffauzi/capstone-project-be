// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id          Int        @id @default(autoincrement())
  name        String
  username    String     @unique
  password    String
  role        Role?      @relation(fields: [role_id], references: [id])
  role_id     Int?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  assign_test PostTest[] @relation(name: "assign_to")
  scored_test PostTest[] @relation(name: "scored_by")
}

model Subjects {
  id        Int        @id @default(autoincrement())
  name      String
  lesson    String
  question  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  PostTest  PostTest[]
}

model PostTest {
  id           Int      @id @default(autoincrement())
  answer       String?
  score        Int?
  subject      Subjects @relation(fields: [subject_id], references: [id])
  subject_id   Int
  assign_to    Users?   @relation("assign_to", fields: [assign_to_id], references: [id])
  assign_to_id Int?
  scored_by    Users?   @relation("scored_by", fields: [scored_by_id], references: [id])
  scored_by_id Int?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String
  RolePermission RolePermission[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  Users          Users[]
}

model Permission {
  id             Int              @id @default(autoincrement())
  name           String
  RolePermission RolePermission[]
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
}

model RolePermission {
  id            Int        @id @default(autoincrement())
  role          Role       @relation(fields: [role_id], references: [id])
  role_id       Int
  permission    Permission @relation(fields: [permission_id], references: [id])
  permission_id Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}
